<!-- <import name="rate" src="../components/star/index"></import> -->
<template>
  <div class="detail-page">
    <div class="page-header">
      <image src="{{detailData.icon}}"></image> 
      <div class="appInfo">
        <text>{{detailData.name}}</text>
        <!-- <rate rate="{{detailData.star/5}}" count="{{detailData.evaluate_count}}"></rate> -->
        <rating rating="{{detailData.star/10}}" stepsize="0.1"></rating>
        <div class="count-desc">
          <text>{{detailData.size}}</text>
          <text>{{detailData.download_count}}次下载</text>
        </div>
      </div>
    </div>
    <div class="page-body">
      <div class="recommend-desc"><text>“{{detailData.recommend_desc||''}}”</text></div>
      <div class="app-images">
          <!-- <swiper class="swiper" autoplay="true" interval="2000" indicator="true">
              <image for="(index,item) in detailData.images" src="{{item.image}}"></image>
          </swiper> -->
          <div class="image-cont">
              <image for="(index,item) in detailData.images" src="{{item.image}}"></image>
          </div>
      </div>
      <div class="app-intro">
        <div class="app-intro-title">
          <div class="before"></div>
          <text>应用简介</text>
        </div>
        <div class="showMoreCont">
            <a class="app-intro-desc {{linesClass}}">{{appDesc}}</a>
            <text class="app-intro-more" @click="showMore" show="appDesc.length > 97">{{showMoreTxt}}</text>
        </div>
      </div>
      <div class="app-sysInfo">
          <div class="app-intro-title">
            <div class="before"></div>
            <text>应用信息</text>
          </div>
          <div class="app-sysTab">
            <div class="app-sysRow">
                <div class="app-sysTab-left"><text>开发者：</text></div>
                <div class="app-sysTab-right"><text>{{detailData.publisher}}</text></div>
            </div>
            <div class="app-sysRow">
                <div class="app-sysTab-left"><text>更新时间：</text></div>
                <div class="app-sysTab-right"><text>{{detailData.version_time}}</text></div>
            </div>
            <div class="app-sysRow">
                <div class="app-sysTab-left"><text>当前版本：</text></div>
                <div class="app-sysTab-right"><text>{{detailData.version_name}}</text></div>
            </div>
            <div class="app-sysRow">
                <div class="app-sysTab-left"><text>使用权限：</text></div>
                <div class="app-sysTab-right"><text>共{{detailData.permissions.length}}项</text></div>
            </div>
          </div>
          <a @click='showAllPril' show="detailData.permissions.length>0">查看全部权限</a>
      </div>
    </div>
    <div class="installWrap" show="{{noInstalled}}">  <!-- 父组件不显示，但子组件会显示。所以要递归赋值；封装成component应该能避免这个bug -->
      <div class="installBorder" show="{{noInstalled}}"></div>
      <div class="installBtn" @click="installApp" show="{{noInstalled}}">
        <text show="{{noInstalled}}">安装</text>
      </div>
    </div>
  </div>
</template>

<style lang="less">
  .detail-page {
    flex-direction: column;
    align-items: center;
    padding-bottom: 160px;
  }
  .page-header{
    margin-top: 20px;
    width: 1020px;
    image{
        width: 250px;
        height: 250px;
        margin-right: 20px;
    }
    rating{
      width: 300px;
    }
  }
.appInfo{
  flex-direction: column;
  justify-content: center;
  text{
    font-size: 54px;
    color: #000000;
    font-weight: bold;
  }
  .count-desc text{
    font-size: 48px;
    font-weight: normal;
    color: #666666;
    margin-top: 15px;
    margin-right: 30px;
  }
}
.page-body{
  flex-direction: column;
  width: 1020px;
  .recommend-desc{
    flex-direction: row;
    justify-content: center;
    text{
      font-size: 64px;
    }    
    margin-top: 40px;
    margin-bottom: 40px;
  }
  .app-images{
    flex-direction: row;
    justify-content: center;
    swiper{
      width: 1020px;
      height: 480px;
    }
    .image-cont{
      flex-direction: row;
      justify-content: flex-start;
    }
    image{
      flex-shrink: 0;
      width: 270px;
      height: 480px;
      margin-right: 15px;
    }
  }
  .app-intro{
    flex-direction: column;
    justify-content: flex-start;
    margin-top: 40px;
    .showMoreCont{
      flex-direction: column;
      .app-intro-desc{
        font-size: 40px;
        line-height: 60px;
        text-overflow: ellipsis;
      }
      .lines-1{
        lines: 9999;  /* 文档教程指定-1为不限定行数。实际上使用-1却只有一行。可能是魅族手机的bug？*/
      }
      .lines4{
        lines: 4;
      }
      .app-intro-more{
        font-size: 40px;
        line-height: 60px;
        color:#6495ED;
      }
    }
  }
  .app-intro-title{
      flex-direction: row;
      align-items: center;
      margin-bottom: 30px;
      .before{
        width: 8px;
        height: 50px;
        background-color: #4f89ea;
        margin-right: 10px;
      }
      text{
        font-size: 48px;
      }
    }
  .app-sysInfo{
    flex-direction: column;
    margin-top: 40px;
    margin-bottom: 40px;
    a{
      font-size: 54px;
      color: #6495ED;
    }
    .app-sysTab{
      flex-direction: column;
      justify-content: flex-start;
      .app-sysRow{
        flex-direction: row;
        justify-content: flex-start;
        text{
          font-size: 40px;
        }
        .app-sysTab-left{
          width: 200px;
          flex-direction: row;
          justify-content: flex-end;
        }
        .app-sysTab-right{
          flex-direction: row;
          justify-content: flex-start;
        }
      }
    }
  }
}
.installWrap{
  position: fixed;  /* fixed定位不会相对于父容器 */
  width: 1080px;
  height: 160px;
  bottom: 0;
  background-color: #ffffff;
  .installBorder{
    width: 1080px;
    height: 2px;
    background-color: #999999;
    position: fixed;
    bottom: 160;
    left: 0;
  }
  .installBtn{
    flex-direction: row;
    justify-content: center;
    align-content: center;
    width: 700px;
    height: 100px;
    background-color: #6495ED;
    border-radius: 50px;
    position: fixed;
    left: 190px;
    bottom: 30px;
    text{
      color: #ffffff;
      font-size: 54px;
    }
  }
}
</style>

<script>
  import fetch from '@system.fetch'
  import pkg from '@system.package'
  import prompt from '@system.prompt'

  export default {
    protected:{
      packageName: '',
      app_id: 0,
      versionCode: 0,
      detailData: {
        permissions:[]
      },
      appDesc: '',
      orgAppDesc: '',
      isShowMore:false,
      showMoreTxt:'更多',
      linesClass: '',
      permissions:[],
      noInstalled:true,
      permissionsData:{
        noInited:true
      }
    },
    showMore(){
      if(this.isShowMore){
        this.linesClass = 'lines-1';
        this.showMoreTxt = '收起';
      }else{
        this.linesClass = 'lines4';
        this.showMoreTxt = '了解更多';
      }
      this.isShowMore = !this.isShowMore;
    },
    txtFlowDot:function(txt,length,append){
      append = append || ' ..'
      if(!txt)
        return;

      return txt.substr(0,length) + append;
    },
    installApp(){
      var self = this;
      pkg.install({
        package: self.packageName,
        success: function (data) {
          console.log(`handling success: ${data.result}`)
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    },
    dealPermission(){
      var itemObj = {};
      let val = self.permissionsData;
      for(var key in val){
          let groupName = val[key]['group_label']
          if(!itemObj[groupName]){
            itemObj[groupName] = [];
          }
          itemObj[groupName].push(val[key]['perm_label'])
        }
        console.log(JSON.stringify(itemObj));
        var dialogCont = '';
        for(var keyn in itemObj){
          dialogCont += keyn+':\n';
          itemObj[keyn].forEach(item=>{
            dialogCont += item+'\n';
          });
          dialogCont += '\n';
        }
        prompt.showDialog({
          title: '此应用有权限访问以下内容',
          message: dialogCont,
          buttons:[
            {text:'取 消',color:'#6495ED', fontSize: '48px'},
            {text:'确 定',color:'#6495ED', fontSize: '48px'}
          ]
        })
    },
    showAllPril(){
      var self = this, codes = [];
      if(self.permissionsData && !self.permissionsData.noInited){
        return self.dealPermission();
      }
      self.permissions.forEach(item=>{
        codes.push(item["permission_code"]);
      });
      fetch.fetch({
        url:'https://open-app.meizu.com/mobile/public/permissions/detail',
        data:{
          codes:codes.join(','),
          packageName: self.packageName,
          app_id: self.app_id,
          versionCode: self.versionCode,
          business: '',
          blocksource: '',
          _t : +new Date()
        },
        success: function (data) {
          var res = JSON.parse(data.data);
          console.log(JSON.stringify(res));
          var val = res.value;
          if(val){
            self.permissionsData = val;
            self.dealPermission();
          }else{
            console.info('空数据')
          }
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    },
    /**
     * 当用户点击菜单按钮时触发，调用app中定义的方法showMenu
     * 注意：使用加载器测试`创建桌面快捷方式`功能时，请先在`系统设置`中打开`应用加载器`的`桌面快捷方式`权限
     */
    onMenuPress() {
      this.$app.$def.showMenu()
    },
    onInit(){
      var self = this;
      pkg.hasInstalled({
        package: self.packageName,
        success: function (data) {
          self.noInstalled = data.result?false:true;
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
      self.getAppInfo(function(res){
        res.size && (res.size = self.sizeFormat(res.size));
        res.download_count && (res.download_count = self.countFormat(res.download_count));
        res.version_time && (res.version_time = self.timeFormat(res.version_time));
        self.orgAppDesc = res.description;
        if(res.description.length>97){
          self.isShowMore = true;
          self.showMoreTxt = '了解更多';
          self.linesClass = 'lines4';
          // self.appDesc = self.txtFlowDot(res.description,97);
        }else{
          self.isShowMore = false;
          self.showMoreTxt = '收起';
          self.linesClass = 'lines-1';
          // self.appDesc = res.description;
        }
        self.appDesc = res.description;
        self.permissions = res.permissions;
        self.detailData = res;
        console.log(JSON.stringify(self.detailData));
      })
    },
    sizeFormat(value){
      return this.$app.$def.sizeFormat(value)
    },
    countFormat(value){
      return this.$app.$def.countFormat(value)
    },
    timeFormat(value){
      let t = new Date(value);
      return t.getFullYear()+'.'+(t.getMonth()+1)+'.'+t.getDate();
    },
    getAppInfo(fn){
      var self = this;
      fetch.fetch({
        url:'https://open-app.meizu.com/mobile/public/app/detail/'+self.app_id,
        data:{
          packageName: self.packageName,
          app_id: self.app_id,
          versionCode: self.versionCode,
          business: '',
          blocksource: '',
          _t : +new Date()
        },
        success: function (data) {
          var res = JSON.parse(data.data);
          if(res.value){
            fn&&fn(res.value);
          }else{
            console.info('空数据')
            fn&&fn({});
          }
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    }
  }
</script>
